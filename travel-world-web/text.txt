管理规范
1.迟到早退，
  |不得无故迟到或者早退，特殊情况需要提前说明，超过或等于半天要发boss申请。
  --（主要针对上下班比较随意，完全按照个人意愿，比如今天想不加班了就走了，经常这样会造成其它同事心里不平衡而效仿，造成不良风气）
2.工作时间做私事娱乐等。
  |严禁工作时间玩手机、打游戏、看视频、听音乐等，视情节严重程度给予惩罚（批评、扣薪、甚至辞退等）
  --(现在这些情况很普遍，就是因为没有及时管理，造成风气传染，就算工作态度好的人看到别人都在玩正常人也会心里不平衡而也去一样做，实际干活时间很少，还抱怨时间给的不够，这也是目前导致工作效率低下的一个重要原因)
3.工期预估不准确。
  |实际工期会根据实际投入人员人数和能力进行预估，比如一个任务三年经验需要一天，一年经验可能需要三天，而不是一个任务不论谁开发这个任务就是两天，
   --（存在实际的工作年限没有创造出对应价值的情况，比如拿着三年经验工资的人做事像个实习生）
  |每个任务需要一个经验较为丰富的人在客观的角度去评估工期，而不是个人随意定工期。
   --（非技术人员不了解实际开发情况无法估算大概开发时间，导致实际开发人员随意漫天要价，也无力反驳）
4.工作质量随意，出现问题没有任何责任。
  |任务责任制，责任分主次，视出现问题的频率及严重程度进行点名公示、绩效扣减、特别严重并且没有改善的要考虑是否适合这份工作。
  --（存在部分没有责任感，在混日子心态的员工，在工作质量上没有任何考虑，而是想的是糊弄过去就行了，出问题再说这种心态，造成做出来的东西bug百出，没有整体考虑，后期维护维护困难，主要原因是出问题了没有任何追责）
5.工作任务结果无反馈。
  |分配任务后石沉大海，最终都是等待状态，由于消息不能及时反馈导致，所以做事情一定要给反馈，无反馈要追责，避免因此浪费工期。
  --（比如：经常出现测试提出bug，开发实际已经修改完毕，但是并没有告知测试，导致过了很久知道测试去催开发，开发的说法就是早就改好了啊，这个责任应该算开发没有及时反馈的问题，甚至双方都对问题不在过问，直到验收才暴露，这只是场景之一，类似的还有）

工作流程： （待完善补充）
1.需求确认->开发确认->开发->测试->发布

开发规范（需整理细节做宣讲）
1.前端代码规范
2.后端代码规范
3.git规范
4.版本发布规范

